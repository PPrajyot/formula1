{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pract-bwt"
		},
		"AzureDataLakeStorage_pract_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage_pract'"
		},
		"ls_adls2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls2'"
		},
		"ls_fromula1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_fromula1'"
		},
		"AzureDataLakeStorage_pract_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://formula1pract.dfs.core.windows.net/"
		},
		"ls_adls2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://practicestorage11.dfs.core.windows.net/"
		},
		"ls_api_source_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://ergast.com/api/f1/"
		},
		"ls_databricks_formula1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0331-100230-h84du5s5"
		},
		"ls_fromula1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://formula1pract.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage_pract')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_pract_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_pract_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_api_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_api_source_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks_formula1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1764137450868398.18.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/480841cb-19df-4bb9-a818-f6f4cf1dc10c/resourceGroups/rg_pract/providers/Microsoft.Databricks/workspaces/db_wrksp",
					"existingClusterId": "[parameters('ls_databricks_formula1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_fromula1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_fromula1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_fromula1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_pract",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name_sink": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name_sink",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@formatDateTime(utcnow(), 'yyyy-dd-MM')",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_pract')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_fromula1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"param_window_end_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@formatDateTime(dataset().param_window_end_date,'yyyy-MM-dd')",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"constructorId": {
							"type": "integer"
						},
						"constructorRef": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"nationality": {
							"type": "string"
						},
						"url": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_fromula1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_pract",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name_sink": {
						"type": "String"
					},
					"directory_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name_sink",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory_name",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_pract')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_api_source",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_param_file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(dataset().ds_param_file_name,'.json')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_api_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_driver_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "drivers.json",
						"folderPath": "drivers",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_races_season_wise_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(item().season,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Races','/',string(utcnow('yyyyMMdd')))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_season_data_only')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "season.json",
						"folderPath": {
							"value": "@concat('Seasons','/',string(utcnow('yyyyMMdd')))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_season_round_wise_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_name": {
						"type": "string"
					},
					"round": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().year_name,'_',dataset().round,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Results','/',string(utcnow('yyyyMMdd')))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "temp.txt",
						"fileSystem": "test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_pract')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {
									"ds_param_file_name": {
										"value": "@pipeline().parameters.file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Json2",
								"type": "DatasetReference",
								"parameters": {
									"file_name_sink": {
										"value": "@pipeline().parameters.file_name",
										"type": "Expression"
									},
									"directory_name": {
										"value": "@concat(pipeline().parameters.file_name,'/',formatDateTime(utcnow(),'yyyy-MM-dd'))",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"file_name": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/Json2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_driver_data_ingst')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1_driver",
						"description": "get total number of pages",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://ergast.com/api/f1/drivers.json"
						}
					},
					{
						"name": "Set_var_driver",
						"description": "set total page value into limit_var variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web1_driver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "limit_var",
							"value": {
								"value": "@activity('Web1_driver').output.MRData.total",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web2_driver",
						"description": "get data from API to ADLS GEN 2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set_var_driver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://ergast.com/api/f1/drivers.json?limit=',variables('limit_var'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set_var_driver_data",
						"description": " set drivers data in variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web2_driver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "drivers",
							"value": {
								"value": "@{activity('Web2_driver').output.MRData.DriverTable.Drivers}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copydata_api_to_adls",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set_var_driver_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "mycol",
										"value": {
											"value": "@variables('drivers')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "mycol",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sink_driver_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"limit_var": {
						"type": "String"
					},
					"drivers": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T15:23:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_driver_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_formula1_ingest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_formula1_foldernm",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {
									"param_window_end_date": {
										"value": "@pipeline().parameters.param_window_end_date",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If_condtn",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get_formula1_foldernm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get_formula1_foldernm').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ingest_all_file",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula1/Ingestion/0.Ingest all files",
										"baseParameters": {
											"pass_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_window_end_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-13T09:40:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks_formula1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_race_result_round_wise_chld')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"description": "get data from api",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('http://ergast.com/api/f1/',pipeline().parameters.season_value_parameter,'.json')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach_season",
						"description": "iterate through rounds",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Web1').output.MRData.RaceTable.Races",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Web_2_round_wise_race_result",
									"description": "get data from api",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@concat('http://ergast.com/api/f1/',pipeline().parameters.season_value_parameter,'/',item().round,'/','results.json')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "set_var_round_wise_result",
									"description": "write race result data to string type var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Web_2_round_wise_race_result",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "race_rslt_str",
										"value": {
											"value": "@{activity('Web_2_round_wise_race_result').output.MRData.RaceTable.Races}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set_var_season_value",
									"description": "write season value in one variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "file_nm_season",
										"value": {
											"value": "@pipeline().parameters.season_value_parameter",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_data_round_wise",
									"description": "copy data from api adls in json format",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "set_var_round_wise_result",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set_var_season_value",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "mycol",
													"value": {
														"value": "@variables('race_rslt_str')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "mycol",
														"type": "String"
													},
													"sink": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_source_data",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sink_season_round_wise_data",
											"type": "DatasetReference",
											"parameters": {
												"year_name": {
													"value": "@variables('file_nm_season')",
													"type": "Expression"
												},
												"round": {
													"value": "@item().round",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"season_value_parameter": {
						"type": "string"
					}
				},
				"variables": {
					"race_rslt_str": {
						"type": "String"
					},
					"file_nm_season": {
						"type": "String"
					},
					"season_data_only": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T14:38:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_season_round_wise_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_race_prt')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web_race",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "http://ergast.com/api/f1/seasons.json"
						}
					},
					{
						"name": "Set_variable_race",
						"description": "save limit value in var",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web_race",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "limit",
							"value": {
								"value": "@activity('Web_race').output.MRData.total",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web_race_2",
						"description": "api to adls",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set_variable_race",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('http://ergast.com/api/f1/seasons.json?limit=',variables('limit'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach_season",
						"description": "iterate season value",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web_race_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Web_race_2').output.MRData.SeasonTable.Seasons",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Web_race_3_fr",
									"description": "API and store in ADLS Gen2 in JSON format",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@concat('http://ergast.com/api/f1/',item().season,'.json?limit=100')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set_var_race_data",
									"description": "write races data into one string type variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Web_race_3_fr",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "races_data",
										"value": {
											"value": "@{activity('Web_race_3_fr').output.MRData.RaceTable.Races}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_data_races",
									"description": "write data from set var to adls bronze",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set_var_race_data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "mycol",
													"value": {
														"value": "@variables('races_data')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "mycol",
														"type": "String"
													},
													"sink": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_source_data",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sink_races_season_wise_data",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Set_var_season_wise",
									"description": "write season value in one variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "year_wise",
										"value": {
											"value": "@item().season",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Execute_pl_cld",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set_var_season_wise",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_race_result_round_wise_chld",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"season_value_parameter": {
												"value": "@variables('year_wise')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set_var_only_season_data",
						"description": "write data from to var",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web_race_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "season_data_only",
							"value": {
								"value": "@{activity('Web_race_2').output.MRData.SeasonTable.Seasons}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy_data_season",
						"description": "write season data from set variable to adls in json format",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set_var_only_season_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "mycol",
										"value": {
											"value": "@variables('season_data_only')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "mycol",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sink_season_data_only",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"limit": {
						"type": "String"
					},
					"races_data": {
						"type": "String"
					},
					"year_wise": {
						"type": "String"
					},
					"race_rslt_str": {
						"type": "String"
					},
					"file_nm_season": {
						"type": "String"
					},
					"season_data_only": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T14:38:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_season_data_only')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_races_season_wise_data')]",
				"[concat(variables('factoryId'), '/pipelines/pl_race_result_round_wise_chld')]"
			]
		}
	]
}